// Code generated by protoc-gen-go. DO NOT EDIT.
// source: OnosServer.proto

package pang

import (
	context "context"
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

type OnosRequest struct {
	Message              string   `protobuf:"bytes,1,opt,name=message,proto3" json:"message,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *OnosRequest) Reset()         { *m = OnosRequest{} }
func (m *OnosRequest) String() string { return proto.CompactTextString(m) }
func (*OnosRequest) ProtoMessage()    {}
func (*OnosRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_08b859915553faa1, []int{0}
}

func (m *OnosRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_OnosRequest.Unmarshal(m, b)
}
func (m *OnosRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_OnosRequest.Marshal(b, m, deterministic)
}
func (m *OnosRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_OnosRequest.Merge(m, src)
}
func (m *OnosRequest) XXX_Size() int {
	return xxx_messageInfo_OnosRequest.Size(m)
}
func (m *OnosRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_OnosRequest.DiscardUnknown(m)
}

var xxx_messageInfo_OnosRequest proto.InternalMessageInfo

func (m *OnosRequest) GetMessage() string {
	if m != nil {
		return m.Message
	}
	return ""
}

type OnosReply struct {
	Message              string   `protobuf:"bytes,2,opt,name=message,proto3" json:"message,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *OnosReply) Reset()         { *m = OnosReply{} }
func (m *OnosReply) String() string { return proto.CompactTextString(m) }
func (*OnosReply) ProtoMessage()    {}
func (*OnosReply) Descriptor() ([]byte, []int) {
	return fileDescriptor_08b859915553faa1, []int{1}
}

func (m *OnosReply) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_OnosReply.Unmarshal(m, b)
}
func (m *OnosReply) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_OnosReply.Marshal(b, m, deterministic)
}
func (m *OnosReply) XXX_Merge(src proto.Message) {
	xxx_messageInfo_OnosReply.Merge(m, src)
}
func (m *OnosReply) XXX_Size() int {
	return xxx_messageInfo_OnosReply.Size(m)
}
func (m *OnosReply) XXX_DiscardUnknown() {
	xxx_messageInfo_OnosReply.DiscardUnknown(m)
}

var xxx_messageInfo_OnosReply proto.InternalMessageInfo

func (m *OnosReply) GetMessage() string {
	if m != nil {
		return m.Message
	}
	return ""
}

func init() {
	proto.RegisterType((*OnosRequest)(nil), "pang.OnosRequest")
	proto.RegisterType((*OnosReply)(nil), "pang.OnosReply")
}

func init() { proto.RegisterFile("OnosServer.proto", fileDescriptor_08b859915553faa1) }

var fileDescriptor_08b859915553faa1 = []byte{
	// 150 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xe2, 0x12, 0xf0, 0xcf, 0xcb, 0x2f,
	0x0e, 0x4e, 0x2d, 0x2a, 0x4b, 0x2d, 0xd2, 0x2b, 0x28, 0xca, 0x2f, 0xc9, 0x17, 0x62, 0x29, 0x48,
	0xcc, 0x4b, 0x57, 0x52, 0xe7, 0xe2, 0x06, 0xc9, 0x04, 0xa5, 0x16, 0x96, 0xa6, 0x16, 0x97, 0x08,
	0x49, 0x70, 0xb1, 0xe7, 0xa6, 0x16, 0x17, 0x27, 0xa6, 0xa7, 0x4a, 0x30, 0x2a, 0x30, 0x6a, 0x70,
	0x06, 0xc1, 0xb8, 0x4a, 0xaa, 0x5c, 0x9c, 0x10, 0x85, 0x05, 0x39, 0x95, 0xc8, 0xca, 0x98, 0x50,
	0x94, 0x19, 0xd9, 0x73, 0x71, 0x21, 0x6c, 0x12, 0x32, 0xe4, 0xe2, 0x74, 0x2d, 0x2b, 0xc8, 0x0b,
	0xca, 0x2f, 0x2d, 0x49, 0x15, 0x12, 0xd4, 0x03, 0xd9, 0xa8, 0x87, 0x64, 0x9d, 0x14, 0x3f, 0xb2,
	0x50, 0x41, 0x4e, 0xa5, 0x12, 0x83, 0x13, 0x6f, 0x14, 0x47, 0x72, 0x7e, 0xae, 0x3e, 0x48, 0xbc,
	0x83, 0x91, 0x31, 0x89, 0x0d, 0xec, 0x58, 0x63, 0x40, 0x00, 0x00, 0x00, 0xff, 0xff, 0x63, 0x5a,
	0x5e, 0xcf, 0xc0, 0x00, 0x00, 0x00,
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// OnosServerClient is the client API for OnosServer service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type OnosServerClient interface {
	EvpnRoute(ctx context.Context, in *OnosRequest, opts ...grpc.CallOption) (*OnosReply, error)
}

type onosServerClient struct {
	cc *grpc.ClientConn
}

func NewOnosServerClient(cc *grpc.ClientConn) OnosServerClient {
	return &onosServerClient{cc}
}

func (c *onosServerClient) EvpnRoute(ctx context.Context, in *OnosRequest, opts ...grpc.CallOption) (*OnosReply, error) {
	out := new(OnosReply)
	err := c.cc.Invoke(ctx, "/pang.OnosServer/EvpnRoute", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// OnosServerServer is the server API for OnosServer service.
type OnosServerServer interface {
	EvpnRoute(context.Context, *OnosRequest) (*OnosReply, error)
}

// UnimplementedOnosServerServer can be embedded to have forward compatible implementations.
type UnimplementedOnosServerServer struct {
}

func (*UnimplementedOnosServerServer) EvpnRoute(ctx context.Context, req *OnosRequest) (*OnosReply, error) {
	return nil, status.Errorf(codes.Unimplemented, "method EvpnRoute not implemented")
}

func RegisterOnosServerServer(s *grpc.Server, srv OnosServerServer) {
	s.RegisterService(&_OnosServer_serviceDesc, srv)
}

func _OnosServer_EvpnRoute_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(OnosRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(OnosServerServer).EvpnRoute(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/pang.OnosServer/EvpnRoute",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(OnosServerServer).EvpnRoute(ctx, req.(*OnosRequest))
	}
	return interceptor(ctx, in, info, handler)
}

var _OnosServer_serviceDesc = grpc.ServiceDesc{
	ServiceName: "pang.OnosServer",
	HandlerType: (*OnosServerServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "EvpnRoute",
			Handler:    _OnosServer_EvpnRoute_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "OnosServer.proto",
}
